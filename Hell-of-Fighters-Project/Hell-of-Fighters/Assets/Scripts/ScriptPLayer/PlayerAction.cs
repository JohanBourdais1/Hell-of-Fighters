//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Scripts/ScriptPLayer/PlayerAction.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerAction : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerAction()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerAction"",
    ""maps"": [
        {
            ""name"": ""PLayerAction 2"",
            ""id"": ""01cc6188-9679-44b6-aef8-e4f6884d85dc"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""PassThrough"",
                    ""id"": ""3aa0a735-fffc-4a00-8c06-0b8953a558c9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Jumping"",
                    ""type"": ""Button"",
                    ""id"": ""b1681ba6-11d7-4d12-865b-3970408de05f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Attack1"",
                    ""type"": ""Button"",
                    ""id"": ""4e7f7941-a030-4307-a138-d04623235b8b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Air Attack"",
                    ""type"": ""Button"",
                    ""id"": ""89f0ad0c-d37f-404b-a61f-8ab161325dbb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Attack2"",
                    ""type"": ""Button"",
                    ""id"": ""8dcdaa75-2265-4c31-ba2d-16ad90b18f86"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Attack3"",
                    ""type"": ""Button"",
                    ""id"": ""f0a470cc-a8db-4243-a56b-c3dc9e50b49b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Roll"",
                    ""type"": ""Button"",
                    ""id"": ""f29c2dc5-69c7-4d05-9004-5dfcc55feede"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Attack Spe"",
                    ""type"": ""Button"",
                    ""id"": ""0a76d26e-6c68-4561-941d-e0e776aa05da"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Defend"",
                    ""type"": ""Button"",
                    ""id"": ""ea59e745-a877-4cc7-b89a-f74f548f3866"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Heal"",
                    ""type"": ""Button"",
                    ""id"": ""5974da84-5a07-4324-aea4-10e8696effc3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""HorizontalMovement"",
                    ""id"": ""649b4c2c-c048-4c66-a059-2579cb32c4ff"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""acd0d3c2-ac9c-4a95-87e1-55b75754b6b3"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""4c6a3de4-f63c-4f06-befc-5d50be1573c3"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""HorizontalMovement"",
                    ""id"": ""66d29efa-22ba-4fa5-b266-d9ae9109bfc9"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""33ed8a68-9fd2-4832-b333-e692a935532a"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""1a16e12c-b9c0-4ebe-88a5-9629c0c2364c"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""b08637e3-78be-4567-a515-59ef6f279994"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jumping"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ca668a8c-4491-4956-b0a7-7aaedb4c1348"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jumping"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3cdc6b7d-4d48-4230-9909-d5c41a1cf72f"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Attack1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f5ae8556-892d-4ab0-92e7-cda086674a4f"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Attack1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""50bf5f56-79f6-45fa-9d57-b1196ea0c15b"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Air Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9ac7fb00-e93f-4361-930f-c93159772d73"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Air Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b78c146b-89cf-4c32-b3bd-a44ac3cfff7f"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Attack2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0469b3b7-33f5-44d3-8f17-a2a15805e8da"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Attack2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ccdbe407-2a17-4e94-9512-70ad801d227e"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Attack3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4fe50d20-a083-4cbd-bd1d-47edafa3d405"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Attack3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""74f56e20-32a8-4d9c-a32d-9521220fd53e"",
                    ""path"": ""<Keyboard>/capsLock"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Roll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dbd0d2b1-48f4-4aca-9e41-a4aeb3cf825a"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Roll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f322d57c-0507-4d49-8452-10d5032430eb"",
                    ""path"": ""<Keyboard>/5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Attack Spe"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3217dccc-1e5f-4c09-8bd5-41d418915f07"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Attack Spe"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3b6671b2-233a-4f9c-83b3-6ade4e167bc5"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Defend"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3976abf5-a6ed-4413-a59f-bc74091b3634"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Defend"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2361b4c9-91eb-4510-8f7d-7ac284a1fce6"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Heal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""48a3326a-d2c8-4d6c-8c62-fbb4c841e91c"",
                    ""path"": ""<Gamepad>/rightStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Heal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // PLayerAction 2
        m_PLayerAction2 = asset.FindActionMap("PLayerAction 2", throwIfNotFound: true);
        m_PLayerAction2_Movement = m_PLayerAction2.FindAction("Movement", throwIfNotFound: true);
        m_PLayerAction2_Jumping = m_PLayerAction2.FindAction("Jumping", throwIfNotFound: true);
        m_PLayerAction2_Attack1 = m_PLayerAction2.FindAction("Attack1", throwIfNotFound: true);
        m_PLayerAction2_AirAttack = m_PLayerAction2.FindAction("Air Attack", throwIfNotFound: true);
        m_PLayerAction2_Attack2 = m_PLayerAction2.FindAction("Attack2", throwIfNotFound: true);
        m_PLayerAction2_Attack3 = m_PLayerAction2.FindAction("Attack3", throwIfNotFound: true);
        m_PLayerAction2_Roll = m_PLayerAction2.FindAction("Roll", throwIfNotFound: true);
        m_PLayerAction2_AttackSpe = m_PLayerAction2.FindAction("Attack Spe", throwIfNotFound: true);
        m_PLayerAction2_Defend = m_PLayerAction2.FindAction("Defend", throwIfNotFound: true);
        m_PLayerAction2_Heal = m_PLayerAction2.FindAction("Heal", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // PLayerAction 2
    private readonly InputActionMap m_PLayerAction2;
    private IPLayerAction2Actions m_PLayerAction2ActionsCallbackInterface;
    private readonly InputAction m_PLayerAction2_Movement;
    private readonly InputAction m_PLayerAction2_Jumping;
    private readonly InputAction m_PLayerAction2_Attack1;
    private readonly InputAction m_PLayerAction2_AirAttack;
    private readonly InputAction m_PLayerAction2_Attack2;
    private readonly InputAction m_PLayerAction2_Attack3;
    private readonly InputAction m_PLayerAction2_Roll;
    private readonly InputAction m_PLayerAction2_AttackSpe;
    private readonly InputAction m_PLayerAction2_Defend;
    private readonly InputAction m_PLayerAction2_Heal;
    public struct PLayerAction2Actions
    {
        private @PlayerAction m_Wrapper;
        public PLayerAction2Actions(@PlayerAction wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_PLayerAction2_Movement;
        public InputAction @Jumping => m_Wrapper.m_PLayerAction2_Jumping;
        public InputAction @Attack1 => m_Wrapper.m_PLayerAction2_Attack1;
        public InputAction @AirAttack => m_Wrapper.m_PLayerAction2_AirAttack;
        public InputAction @Attack2 => m_Wrapper.m_PLayerAction2_Attack2;
        public InputAction @Attack3 => m_Wrapper.m_PLayerAction2_Attack3;
        public InputAction @Roll => m_Wrapper.m_PLayerAction2_Roll;
        public InputAction @AttackSpe => m_Wrapper.m_PLayerAction2_AttackSpe;
        public InputAction @Defend => m_Wrapper.m_PLayerAction2_Defend;
        public InputAction @Heal => m_Wrapper.m_PLayerAction2_Heal;
        public InputActionMap Get() { return m_Wrapper.m_PLayerAction2; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PLayerAction2Actions set) { return set.Get(); }
        public void SetCallbacks(IPLayerAction2Actions instance)
        {
            if (m_Wrapper.m_PLayerAction2ActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_PLayerAction2ActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_PLayerAction2ActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_PLayerAction2ActionsCallbackInterface.OnMovement;
                @Jumping.started -= m_Wrapper.m_PLayerAction2ActionsCallbackInterface.OnJumping;
                @Jumping.performed -= m_Wrapper.m_PLayerAction2ActionsCallbackInterface.OnJumping;
                @Jumping.canceled -= m_Wrapper.m_PLayerAction2ActionsCallbackInterface.OnJumping;
                @Attack1.started -= m_Wrapper.m_PLayerAction2ActionsCallbackInterface.OnAttack1;
                @Attack1.performed -= m_Wrapper.m_PLayerAction2ActionsCallbackInterface.OnAttack1;
                @Attack1.canceled -= m_Wrapper.m_PLayerAction2ActionsCallbackInterface.OnAttack1;
                @AirAttack.started -= m_Wrapper.m_PLayerAction2ActionsCallbackInterface.OnAirAttack;
                @AirAttack.performed -= m_Wrapper.m_PLayerAction2ActionsCallbackInterface.OnAirAttack;
                @AirAttack.canceled -= m_Wrapper.m_PLayerAction2ActionsCallbackInterface.OnAirAttack;
                @Attack2.started -= m_Wrapper.m_PLayerAction2ActionsCallbackInterface.OnAttack2;
                @Attack2.performed -= m_Wrapper.m_PLayerAction2ActionsCallbackInterface.OnAttack2;
                @Attack2.canceled -= m_Wrapper.m_PLayerAction2ActionsCallbackInterface.OnAttack2;
                @Attack3.started -= m_Wrapper.m_PLayerAction2ActionsCallbackInterface.OnAttack3;
                @Attack3.performed -= m_Wrapper.m_PLayerAction2ActionsCallbackInterface.OnAttack3;
                @Attack3.canceled -= m_Wrapper.m_PLayerAction2ActionsCallbackInterface.OnAttack3;
                @Roll.started -= m_Wrapper.m_PLayerAction2ActionsCallbackInterface.OnRoll;
                @Roll.performed -= m_Wrapper.m_PLayerAction2ActionsCallbackInterface.OnRoll;
                @Roll.canceled -= m_Wrapper.m_PLayerAction2ActionsCallbackInterface.OnRoll;
                @AttackSpe.started -= m_Wrapper.m_PLayerAction2ActionsCallbackInterface.OnAttackSpe;
                @AttackSpe.performed -= m_Wrapper.m_PLayerAction2ActionsCallbackInterface.OnAttackSpe;
                @AttackSpe.canceled -= m_Wrapper.m_PLayerAction2ActionsCallbackInterface.OnAttackSpe;
                @Defend.started -= m_Wrapper.m_PLayerAction2ActionsCallbackInterface.OnDefend;
                @Defend.performed -= m_Wrapper.m_PLayerAction2ActionsCallbackInterface.OnDefend;
                @Defend.canceled -= m_Wrapper.m_PLayerAction2ActionsCallbackInterface.OnDefend;
                @Heal.started -= m_Wrapper.m_PLayerAction2ActionsCallbackInterface.OnHeal;
                @Heal.performed -= m_Wrapper.m_PLayerAction2ActionsCallbackInterface.OnHeal;
                @Heal.canceled -= m_Wrapper.m_PLayerAction2ActionsCallbackInterface.OnHeal;
            }
            m_Wrapper.m_PLayerAction2ActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @Jumping.started += instance.OnJumping;
                @Jumping.performed += instance.OnJumping;
                @Jumping.canceled += instance.OnJumping;
                @Attack1.started += instance.OnAttack1;
                @Attack1.performed += instance.OnAttack1;
                @Attack1.canceled += instance.OnAttack1;
                @AirAttack.started += instance.OnAirAttack;
                @AirAttack.performed += instance.OnAirAttack;
                @AirAttack.canceled += instance.OnAirAttack;
                @Attack2.started += instance.OnAttack2;
                @Attack2.performed += instance.OnAttack2;
                @Attack2.canceled += instance.OnAttack2;
                @Attack3.started += instance.OnAttack3;
                @Attack3.performed += instance.OnAttack3;
                @Attack3.canceled += instance.OnAttack3;
                @Roll.started += instance.OnRoll;
                @Roll.performed += instance.OnRoll;
                @Roll.canceled += instance.OnRoll;
                @AttackSpe.started += instance.OnAttackSpe;
                @AttackSpe.performed += instance.OnAttackSpe;
                @AttackSpe.canceled += instance.OnAttackSpe;
                @Defend.started += instance.OnDefend;
                @Defend.performed += instance.OnDefend;
                @Defend.canceled += instance.OnDefend;
                @Heal.started += instance.OnHeal;
                @Heal.performed += instance.OnHeal;
                @Heal.canceled += instance.OnHeal;
            }
        }
    }
    public PLayerAction2Actions @PLayerAction2 => new PLayerAction2Actions(this);
    public interface IPLayerAction2Actions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnJumping(InputAction.CallbackContext context);
        void OnAttack1(InputAction.CallbackContext context);
        void OnAirAttack(InputAction.CallbackContext context);
        void OnAttack2(InputAction.CallbackContext context);
        void OnAttack3(InputAction.CallbackContext context);
        void OnRoll(InputAction.CallbackContext context);
        void OnAttackSpe(InputAction.CallbackContext context);
        void OnDefend(InputAction.CallbackContext context);
        void OnHeal(InputAction.CallbackContext context);
    }
}
